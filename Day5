"""
《百钱百鸡》问题

公鸡5元一只，母鸡3元一只，小鸡1元三只，用100块钱买一百只鸡，问公鸡、母鸡、小鸡各有多少只？
"""
for a in range(21):
     for b in range(34):
         c = 100 - a - b
         if a*5+b*3+c/3==100:
             print('公鸡有%d只，母鸡有%d只，小鸡有%d只'%(a,b,c))




'''
生成斐波那契数列
'''
def fibonacci3(n):
    lis =[]
    for i in range(n):
        if i ==1 or i ==0:
            lis.append(1)
        else:
            lis.append(lis[i-2]+lis[i-1])
    return lis
lis1 = fibonacci3(100)
print(lis1[50])

def fibonacci(n):
    li = []
    for i in range(n):
        if i == 1 or i == 0:
            li.append(1)
        else:
            li.append(li[i-1]+li[i-2])
    return li
li = fibonacci(100)
print(li[50])


'''
找出10000以内的完美数。
 说明：完美数又称为完全数或完备数，它的所有的真因子（即除了自身以外的因子）的和（即因子函数）恰好等于它本身。
 例如：6（$6=1+2+3$）和28（$28=1+2+4+7+14$）就是完美数。完美数有很多神奇的特性，有兴趣的可以自行了解。
 '''

def GetFactor(a):
    lis = []
    for i in range(1,a):
        if a%i ==0 and a!=1:
            lis.append(i)
        else:
            pass
    return lis

def perfect(n):
    lis = [] #用于存放真因子的列表
    list = [] #用于存放完美数的列表
    for i in range(1,n):
        lis = GetFactor(i)
        if sum(lis) == i :
            list.append(i)
    return list



print(perfect(10000))


'''
输出100以内所有的素数。

说明：素数指的是只能被1和自身整除的正整数（不包括1）。

'''
def JudgePrime(n):
    lis = []
    for i in range(1,n+1):
        if n%i == 0:
            lis.append(i)
    if len(lis)<=2:
        return True



def GetPrime(n):
    lis = []
    for i in range(2,n):
        if JudgePrime(i):
            lis.append(i)
    return lis

print(GetPrime(100))


#new thought https://code.visualstudio.com/api/working-with-extensions/continuous- 
